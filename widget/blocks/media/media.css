/* 修复父元素display: table-cell;时，图片子元素max-width属性值为百分比单位的问题 */
.media-left img, .media-right img, .media-body img {
  max-width: none; }

.media-body {
  position: relative;
  overflow: visible; }

.media-base,
.media-circle,
.media-goods,
.media-goods2,
.media-newsitem,
.media-firmitem,
.media-big-img,
.media-small-imgtxt {
  margin-bottom: 20px;
  position: relative;
  /* clear bootstrap style and add property */ }
  .media-base p, .media-base h4, .media-base h5, .media-base h6,
  .media-circle p,
  .media-circle h4,
  .media-circle h5,
  .media-circle h6,
  .media-goods p,
  .media-goods h4,
  .media-goods h5,
  .media-goods h6,
  .media-goods2 p,
  .media-goods2 h4,
  .media-goods2 h5,
  .media-goods2 h6,
  .media-newsitem p,
  .media-newsitem h4,
  .media-newsitem h5,
  .media-newsitem h6,
  .media-firmitem p,
  .media-firmitem h4,
  .media-firmitem h5,
  .media-firmitem h6,
  .media-big-img p,
  .media-big-img h4,
  .media-big-img h5,
  .media-big-img h6,
  .media-small-imgtxt p,
  .media-small-imgtxt h4,
  .media-small-imgtxt h5,
  .media-small-imgtxt h6 {
    margin: 0; }
  .media-base p, .media-base .media-explain,
  .media-circle p,
  .media-circle .media-explain,
  .media-goods p,
  .media-goods .media-explain,
  .media-goods2 p,
  .media-goods2 .media-explain,
  .media-newsitem p,
  .media-newsitem .media-explain,
  .media-firmitem p,
  .media-firmitem .media-explain,
  .media-big-img p,
  .media-big-img .media-explain,
  .media-small-imgtxt p,
  .media-small-imgtxt .media-explain {
    margin-bottom: .3em;
    color: #55595c; }
  .media-base h4, .media-base h5, .media-base h6,
  .media-circle h4,
  .media-circle h5,
  .media-circle h6,
  .media-goods h4,
  .media-goods h5,
  .media-goods h6,
  .media-goods2 h4,
  .media-goods2 h5,
  .media-goods2 h6,
  .media-newsitem h4,
  .media-newsitem h5,
  .media-newsitem h6,
  .media-firmitem h4,
  .media-firmitem h5,
  .media-firmitem h6,
  .media-big-img h4,
  .media-big-img h5,
  .media-big-img h6,
  .media-small-imgtxt h4,
  .media-small-imgtxt h5,
  .media-small-imgtxt h6 {
    font-size: inherit; }
  .media-base .thumbnail,
  .media-circle .thumbnail,
  .media-goods .thumbnail,
  .media-goods2 .thumbnail,
  .media-newsitem .thumbnail,
  .media-firmitem .thumbnail,
  .media-big-img .thumbnail,
  .media-small-imgtxt .thumbnail {
    border-radius: 0;
    padding: 0;
    margin-bottom: 0; }
  .media-base .tran-layer,
  .media-circle .tran-layer,
  .media-goods .tran-layer,
  .media-goods2 .tran-layer,
  .media-newsitem .tran-layer,
  .media-firmitem .tran-layer,
  .media-big-img .tran-layer,
  .media-small-imgtxt .tran-layer {
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    padding-left: .6em;
    padding-right: .6em;
    margin-bottom: 0;
    color: #ffffff;
    -ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#B3000000, endColorstr=#B3000000)";
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=#B3000000, endColorstr=#B3000000);
    background-color: rgba(0, 0, 0, 0.7); }
    .media-base .tran-layer a:hover,
    .media-circle .tran-layer a:hover,
    .media-goods .tran-layer a:hover,
    .media-goods2 .tran-layer a:hover,
    .media-newsitem .tran-layer a:hover,
    .media-firmitem .tran-layer a:hover,
    .media-big-img .tran-layer a:hover,
    .media-small-imgtxt .tran-layer a:hover {
      color: inherit; }
    .media-base .tran-layer .media-explain,
    .media-circle .tran-layer .media-explain,
    .media-goods .tran-layer .media-explain,
    .media-goods2 .tran-layer .media-explain,
    .media-newsitem .tran-layer .media-explain,
    .media-firmitem .tran-layer .media-explain,
    .media-big-img .tran-layer .media-explain,
    .media-small-imgtxt .tran-layer .media-explain {
      color: #d0d5d8; }
  .media-base .media-title,
  .media-circle .media-title,
  .media-goods .media-title,
  .media-goods2 .media-title,
  .media-newsitem .media-title,
  .media-firmitem .media-title,
  .media-big-img .media-title,
  .media-small-imgtxt .media-title {
    display: block;
    line-height: 1.4;
    font-size: 1.14286em;
    font-family: "Microsoft YaHei", "Microsoft JhengHei", STHeiti, MingLiu; }
  .media-base .media-btn,
  .media-circle .media-btn,
  .media-goods .media-btn,
  .media-goods2 .media-btn,
  .media-newsitem .media-btn,
  .media-firmitem .media-btn,
  .media-big-img .media-btn,
  .media-small-imgtxt .media-btn {
    position: absolute;
    bottom: 2.14286em;
    right: 1.07143em; }
  .media-base .media-time, .media-base .time,
  .media-circle .media-time,
  .media-circle .time,
  .media-goods .media-time,
  .media-goods .time,
  .media-goods2 .media-time,
  .media-goods2 .time,
  .media-newsitem .media-time,
  .media-newsitem .time,
  .media-firmitem .media-time,
  .media-firmitem .time,
  .media-big-img .media-time,
  .media-big-img .time,
  .media-small-imgtxt .media-time,
  .media-small-imgtxt .time {
    color: #818a91; }
  .media-base .photos,
  .media-circle .photos,
  .media-goods .photos,
  .media-goods2 .photos,
  .media-newsitem .photos,
  .media-firmitem .photos,
  .media-big-img .photos,
  .media-small-imgtxt .photos {
    position: relative;
    border-right: 3px solid transparent;
    border-bottom: 3px solid transparent; }
    .media-base .photos .thumbnail, .media-base .photos .img,
    .media-circle .photos .thumbnail,
    .media-circle .photos .img,
    .media-goods .photos .thumbnail,
    .media-goods .photos .img,
    .media-goods2 .photos .thumbnail,
    .media-goods2 .photos .img,
    .media-newsitem .photos .thumbnail,
    .media-newsitem .photos .img,
    .media-firmitem .photos .thumbnail,
    .media-firmitem .photos .img,
    .media-big-img .photos .thumbnail,
    .media-big-img .photos .img,
    .media-small-imgtxt .photos .thumbnail,
    .media-small-imgtxt .photos .img {
      width: 100%; }
      .media-base .photos .thumbnail:first-child, .media-base .photos .img:first-child,
      .media-circle .photos .thumbnail:first-child,
      .media-circle .photos .img:first-child,
      .media-goods .photos .thumbnail:first-child,
      .media-goods .photos .img:first-child,
      .media-goods2 .photos .thumbnail:first-child,
      .media-goods2 .photos .img:first-child,
      .media-newsitem .photos .thumbnail:first-child,
      .media-newsitem .photos .img:first-child,
      .media-firmitem .photos .thumbnail:first-child,
      .media-firmitem .photos .img:first-child,
      .media-big-img .photos .thumbnail:first-child,
      .media-big-img .photos .img:first-child,
      .media-small-imgtxt .photos .thumbnail:first-child,
      .media-small-imgtxt .photos .img:first-child {
        position: absolute;
        top: 3px;
        left: 3px;
        z-index: -1; }



/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=../../map/blocks/media/media.css.map */
