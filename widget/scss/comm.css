@charset "UTF-8";
@import url(../vendors/jzfont/style.css);
* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }

body {
  margin: 0; }

ul, ol, dl {
  margin-top: 0;
  margin-bottom: 0;
  /* clear bootstrap  */ }

ul, ol {
  list-style-type: none; }

ul, ol, dd {
  padding-left: 0; }

p {
  margin: 0; }

b {
  font-weight: normal; }

i, cite, em, var, address, dfn {
  font-style: normal; }

a {
  cursor: pointer;
  color: inherit; }

a, a:hover, a:focus {
  text-decoration: none; }

img {
  max-width: 100%;
  max-height: 100%; }

/* clear bootstrap */
.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: 0;
  line-height: inherit; }

table {
  width: 100%; }

label {
  font-weight: normal; }

/* clear input type="number" arrow */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none !important;
  -moz-appearance: textfield;
  margin: 0; }

/* repair bootstrap4 border-width */
.form-control {
  border-width: 1px; }

[class^="myicon-"],
[class*=" myicon-"] {
  display: inline-block;
  vertical-align: middle; }

.thumbnail, .img, .thumb {
  display: block;
  text-align: center;
  overflow: hidden; }
  .thumbnail img, .img img, .thumb img {
    display: inline-block;
    vertical-align: middle; }

.layout-left, .layout-body, .layout-right {
  display: table-cell;
  vertical-align: top; }

.f-left {
  float: left; }

.f-right {
  float: right; }

.clearfix:before, .clearfix:after {
  content: " ";
  display: table; }
.clearfix:after {
  clear: both; }

/* 宽度自适应宽度 */
.layout-body {
  width: 10000px; }

input, button, select, textarea {
  padding: 0.42857em 0.71429em;
  color: #55595c;
  border: 1px solid #dddddd; }

.form-unit-box {
  position: relative; }
  .form-unit-box input {
    padding-right: 2.4em; }
  .form-unit-box .unit {
    position: absolute;
    right: 0;
    top: 0.42857em;
    width: 2em; }

.form-ctrl-num, .form-ctrl-num2 {
  display: inline-block;
  overflow: hidden;
  vertical-align: middle;
  border: 1px solid #dddddd;
  color: #818a91; }
  .form-ctrl-num input, .form-ctrl-num2 input {
    width: 4em; }
  .form-ctrl-num b, .form-ctrl-num2 b {
    cursor: pointer; }

.form-ctrl-num input {
  border-width: 0 1px; }
.form-ctrl-num b {
  padding: 0 5px;
  font-size: 1.28571em; }

.form-ctrl-num2 {
  position: relative;
  height: 32px;
  padding-right: 24px; }
  .form-ctrl-num2 input {
    border-width: 0 1px 0 0; }
  .form-ctrl-num2 b {
    position: absolute;
    right: 0;
    bottom: 1px;
    height: 15px;
    line-height: 15px;
    width: 24px;
    text-align: center;
    font-size: 0.85714em; }
    .form-ctrl-num2 b:first-child {
      top: 1px;
      border-bottom: 1px solid #dddddd; }

.pulldown .icon-caret-up {
  display: none; }
.pulldown:hover .icon-caret-up, .pulldown.on .icon-caret-up {
  display: inline-block; }
.pulldown:hover .icon-caret-down, .pulldown.on .icon-caret-down {
  display: none; }

.animated {
  -webkit-animation-duration: 1s;
  -o-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  -o-animation-fill-mode: both;
  animation-fill-mode: both;
  position: relative; }

.animated.infinite {
  -webkit-animation-iteration-count: infinite;
  -o-animation-iteration-count: infinite;
  animation-iteration-count: infinite; }

.animated.hinge {
  -webkit-animation-duration: 2s;
  -o-animation-duration: 2s;
  animation-duration: 2s; }

.Intop {
  -webkit-animation-name: Intop;
  -o-animation-name: Intop;
  animation-name: Intop; }

.Intops {
  -webkit-animation-name: Intops;
  -o-animation-name: Intops;
  animation-name: Intops; }

.Inbottom {
  -webkit-animation-name: Inbottom;
  -o-animation-name: Inbottom;
  animation-name: Inbottom; }

.fadeInbottom {
  -webkit-animation-name: fadeInbottom;
  -o-animation-name: fadeInbottom;
  animation-name: fadeInbottom; }

.fadeInleft {
  -webkit-animation-name: fadeInleft;
  -o-animation-name: fadeInleft;
  animation-name: fadeInleft; }

.fadeInlefts {
  -webkit-animation-name: fadeInlefts;
  -o-animation-name: fadeInlefts;
  animation-name: fadeInlefts; }

.fadeInright {
  -webkit-animation-name: fadeInright;
  -o-animation-name: fadeInright;
  animation-name: fadeInright; }

.fadeInrights {
  -webkit-animation-name: fadeInrights;
  -o-animation-name: fadeInrights;
  animation-name: fadeInrights; }

.fadeInshow {
  -webkit-animation-name: fadeInshow;
  -o-animation-name: fadeInshow;
  animation-name: fadeInshow; }

@-webkit-keyframes Intop {
  0% {
    opacity: 0;
    top: -100px; }
  100% {
    opacity: 1;
    top: 0; } }

@-o-keyframes Intop {
  0% {
    opacity: 0;
    top: -100px; }
  100% {
    opacity: 1;
    top: 0; } }

@keyframes Intop {
  0% {
    opacity: 0;
    top: -100px; }
  100% {
    opacity: 1;
    top: 0; } }
@-webkit-keyframes Intops {
  0% {
    opacity: 0;
    top: -100px; }
  100% {
    opacity: 1;
    top: 60; } }
@-o-keyframes Intops {
  0% {
    opacity: 0;
    top: -100px; }
  100% {
    opacity: 1;
    top: 60; } }
@keyframes Intops {
  0% {
    opacity: 0;
    top: -100px; }
  100% {
    opacity: 1;
    top: 60; } }
@-webkit-keyframes Inbottom {
  0% {
    opacity: 0;
    bottom: -500px; }
  100% {
    opacity: 1;
    bottom: 0px; } }
@-o-keyframes Inbottom {
  0% {
    opacity: 0;
    bottom: -500px; }
  100% {
    opacity: 1;
    bottom: 0px; } }
@keyframes Inbottom {
  0% {
    opacity: 0;
    bottom: -500px; }
  100% {
    opacity: 1;
    bottom: 0px; } }
@-webkit-keyframes fadeInbottom {
  0% {
    opacity: 0;
    bottom: -500px; }
  100% {
    opacity: 1;
    bottom: 240; } }
@-o-keyframes fadeInbottom {
  0% {
    opacity: 0;
    bottom: -500px; }
  100% {
    opacity: 1;
    bottom: 240; } }
@keyframes fadeInbottom {
  0% {
    opacity: 0;
    bottom: -500px; }
  100% {
    opacity: 1;
    bottom: 240; } }
@-webkit-keyframes fadeInleft {
  0% {
    opacity: 0;
    left: -100px; }
  100% {
    opacity: 1;
    left: 0; } }
@-o-keyframes fadeInleft {
  0% {
    opacity: 0;
    left: -100px; }
  100% {
    opacity: 1;
    left: 0; } }
@keyframes fadeInleft {
  0% {
    opacity: 0;
    left: -100px; }
  100% {
    opacity: 1;
    left: 0; } }
@-webkit-keyframes fadeInlefts {
  0% {
    opacity: 0;
    left: -500px; }
  100% {
    opacity: 1;
    left: 286px; } }
@-o-keyframes fadeInlefts {
  0% {
    opacity: 0;
    left: -500px; }
  100% {
    opacity: 1;
    left: 286px; } }
@keyframes fadeInlefts {
  0% {
    opacity: 0;
    left: -500px; }
  100% {
    opacity: 1;
    left: 286px; } }
@-webkit-keyframes fadeInright {
  0% {
    opacity: 0;
    right: -100px; }
  100% {
    opacity: 1;
    right: 0; } }
@-o-keyframes fadeInright {
  0% {
    opacity: 0;
    right: -100px; }
  100% {
    opacity: 1;
    right: 0; } }
@keyframes fadeInright {
  0% {
    opacity: 0;
    right: -100px; }
  100% {
    opacity: 1;
    right: 0; } }
@-webkit-keyframes fadeInrights {
  0% {
    opacity: 0;
    right: -500px; }
  100% {
    opacity: 1;
    right: 236px; } }
@-o-keyframes fadeInrights {
  0% {
    opacity: 0;
    right: -500px; }
  100% {
    opacity: 1;
    right: 236px; } }
@keyframes fadeInrights {
  0% {
    opacity: 0;
    right: -500px; }
  100% {
    opacity: 1;
    right: 236px; } }



/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=../map/scss/comm.css.map */
